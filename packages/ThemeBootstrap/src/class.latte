{layout '@layout.latte'}
{var $activePage = 'class'}

{block title}{if $class->interface}Interface{elseif $class->trait}Trait{else}Class{/if} {$class->getName()}{/block}

{block content}
<div id="content" class="class">
    <h1 n:class="$class->isDeprecated() ? deprecated"><span class="type">{if $class->interface}Interface{elseif $class->trait}Trait{else}Class{/if}</span> {$class->getShortName()}</h1>

    <div class="description" n:if="$template->longDescription($class)">
    {$class|longDescription|noescape}
    </div>

    <dl class="tree well" n:ifcontent>
        <dd>
            {if $class->getParentClass()}
                extends
                <a href="{$class->getParentClass()|reflectionLink}">
                    <span n:class="$class->getParentClass()->isDeprecated() ? deprecated">{$class->getParentClass()->getName()}</span>
                </a>
            {/if}

            {if $class->getOwnInterfaces()}
                implements
                {foreach $class->getOwnInterfaces() as $ownInterface}
                <a href="{$ownInterface|reflectionLink}">
                    <span n:class="$ownInterface->isDeprecated() ? deprecated">{$ownInterface->getName()}</span>
                    </a>{sep}, {/sep}
                {/foreach}
            {/if}

            {if $class->getTraits()}
                uses
                {foreach $class->getTraits() as $ownTrait}
                <a href="{$ownTrait|reflectionLink}">
                    <span n:class="$ownTrait->isDeprecated() ? deprecated">{$ownTrait->getName()}</span>
                    </a>{sep}, {/sep}
                {/foreach}
            {/if}
        </dd>
    </dl>

    {define children}
        <p class="elementList">
        {foreach $children as $child}
            <code><a href="{$child|linkReflection}"><span n:tag-if="$child->isDeprecated()" class="deprecated">{$child->getName()}</span></a></code>{sep}, {/sep}
        {/foreach}
        </p>
    {/define}

    <div n:if="$directSubClasses">
        <h3>Direct known subclasses</h3>
        {include children, children => $directSubClasses}
    </div>

    <div n:if="$indirectSubClasses">
        <h3>Indirect known subclasses</h3>
        {include children, children => $indirectSubClasses}
    </div>

    <div class="alert alert-info">
        {if $class->abstract || $class->final}<b>{if $class->abstract}Abstract{else}Final{/if}</b><br>{/if}
        {if $class->getNamespaceName()}<b>Namespace:</b> {$class->getNamespaceName()|linkAllNamespaceParts|noescape}<br>{/if}

        {foreach $template->annotationSort($template->annotationFilter($class->annotations)) as $annotation => $values}
            {foreach $values as $value}
                <b>{$annotation|annotationBeautify}{if $value}:{/if}</b>
                {$value|annotation:$annotation:$class|noescape}<br>
            {/foreach}
        {/foreach}
        <strong>Located at</strong>
        <a href="{$class|linkSource}">{$class->getFileName()|relativePath}</a>
        <br>
    </div>

    {var $ownMethods = $class->getOwnMethods()}
    {var $inheritedMethods = $class->getInheritedMethods()}
    {var $usedMethods = $class->getUsedMethods()}

    {if $ownMethods || $inheritedMethods || $usedMethods}
        {define method}
        <div id="_{$method->getName()}" n:class="element">
            {var $annotations = $method->annotations}
            <a class="anchor" href="#_{$method->getName()}"></a>
            <code class="signature">
                <span class="modifier">
                {if !$class->interface && $method->abstract}abstract{elseif $method->final}final{/if} {if $method->protected}protected{elseif $method->private}private{else}public{/if} {if $method->static}static{/if}
                {if $method->returnsReference()}&amp;{/if}
                </span>

                <span n:class="$method->isDeprecated() ? deprecated">{block|strip}
                    <a href="{$method|linkSource}"><span class="name">{$method->getName()}</span></a>(
                    {if $method->getParameters()}
                    {foreach $method->getParameters() as $parameter}
                        <span class="method-param"><span n:if="$parameter->typeHint" class="type">{$parameter->typeHint|typeLinks:$method|noescape}</span>
                        <code class="parameter">{if $parameter->passedByReference}&amp; {/if}${$parameter->getName()}</code><span class="initializer">{if $parameter->defaultValueAvailable} = {$parameter->defaultValueDefinition|noescape}</span>{elseif $parameter->unlimited},…{/if}</span>{sep}, {/sep}
                    {/foreach}
                    {else}
                        void
                    {/if}
                    ){/block}
                </span>

                {ifset $annotations['return']}: <span class="type">{$annotations['return'][0]|typeLinks:$method|noescape}</span>{/ifset}
            </code>

            <div n:class="description, detailed">
                {$method->getDescription()}

                {if ! $class->isDeprecated() && $method->isDeprecated()}
                    <h4>Deprecated</h4>
                    {ifset $annotations['deprecated']}
                        <div class="list">
                        {foreach $annotations['deprecated'] as $description}
                            {if $description}
                                {$description|annotation:'deprecated':$method|noescape}<br>
                            {/if}
                        {/foreach}
                        </div>
                    {/ifset}
                {/if}

                {if $method->getParameters() && isset($annotations['param'])}
                    <h4>Parameters</h4>
                    <div class="list"><dl>
                    {foreach $method->getParameters() as $parameter}
                        <dt><code class="parameter">${$parameter->getName()}</code>{if $parameter->unlimited},…{/if}</dt>
                        <dd>{$parameter->getDescription()}</dd>
                    {/foreach}
                    </dl></div>
                {/if}

                {if isset($annotations['return']) && 'void' !== $annotations['return'][0]}
                    <h4>Returns</h4>
                    <div class="list">
                    {foreach $annotations['return'] as $description}
                        {$description|annotation:'return':$method|noescape}{sep}<br>{/}
                    {/foreach}
                    </div>
                {/if}

                {ifset $annotations['throws']}
                    <h4>Throws</h4>
                    <div class="list">
                    {foreach $annotations['throws'] as $description}
                        {$description|annotation:'throws':$method|noescape}{sep}<br>{/}
                    {/foreach}
                    </div>
                {/ifset}

                {foreach $template->annotationSort($template->annotationFilter($annotations, array('deprecated', 'param', 'return', 'throws'))) as $annotation => $descriptions}
                    <h4>{$annotation|annotationBeautify}</h4>
                    <div class="list">
                    {foreach $descriptions as $description}
                        {if $description}
                            {$description|annotation:$annotation:$method|noescape}<br>
                        {/if}
                    {/foreach}
                    </div>
                {/foreach}

                {var $overriddenMethod = $method->overriddenMethod}
                {if $overriddenMethod}
                    <h4>Overrides</h4>
                    <div class="list"><code><a n:tag-if="$template->getClass($overriddenMethod->getDeclaringClassName())" href="{$overriddenMethod|methodUrl}">{$overriddenMethod->getDeclaringClassName()}::{$overriddenMethod->getName()}</a></code></div>
                {/if}

                {var $implementedMethod = $method->implementedMethod}
                {if $implementedMethod}
                    <h4>Implementation of</h4>
                    <div class="list"><code><a n:tag-if="$template->getClass($implementedMethod->getDeclaringClassName())" href="{$implementedMethod|methodUrl}">{$implementedMethod|prettyMethodName}</a></code></div>
                {/if}
            </div>
        </div>
        {/define}

        <h2>Methods summary</h2>
        <div class="summary" id="methods" n:if="$ownMethods">
        {foreach $ownMethods as $method}
            {include method, method => $method}
        {/foreach}
        </div>

        {* use traits directly *}
        {foreach $inheritedMethods as $parentName => $methods}
        <h3>Methods inherited from <a href="{$parentName|linkReflection}#methods" n:tag-if="$template->getClass($parentName)">{$parentName}</a></h3>
        <p class="elementList">
        {foreach $methods as $method}
            <code><a href="{$method|methodUrl}" n:tag-if="$template->getClass($parentName)"><span n:tag-if="$method->isDeprecated()" class="deprecated">{$method->getName()}()</span></a></code>{sep}, {/sep}
        {/foreach}
        </p>
        {/foreach}

        {* use traits directly *}
        {foreach $usedMethods as $traitName => $methods}
        <h3>Methods used from <a href="{$traitName|linkReflection}#methods" n:tag-if="$template->getClass($traitName)">{$traitName}</a> trait</h3>
        <p class="elementList">
        {foreach $methods as $data}
            <code><a href="{$data['method']|methodUrl:$data['method']->declaringTrait}" n:tag-if="$template->getClass($traitName)"><span n:tag-if="$data['method']->isDeprecated()" class="deprecated">{$data['method']->getName()}()</span></a>{if $data['aliases']}(as {foreach $data['aliases'] as $alias}<span n:tag-if="$data['method']->isDeprecated()" class="deprecated">{$alias->getName()}()</span>{sep}, {/sep}{/foreach}){/if}</code>{sep}, {/sep}
        {/foreach}
        </p>
        {/foreach}
    {/if}


    {var $ownConstants = $class->ownConstants}
    {var $inheritedConstants = $class->inheritedConstants}

    {if $ownConstants || $inheritedConstants}
        <h2>Constants summary</h2>
        <div class="summary constants" id="constants" n:if="$ownConstants">
        <div n:foreach="$ownConstants as $constant" id="{$constant->getName()}" n:class="element">
            <a href="#{$constant->getName()}" class="anchor"></a>
            {var $annotations = $constant->annotations}

            <code class="signature">
                <span class="name">
                <a nhref="{$constant|linkSource}"><b>{$constant->getName()}</b></a>
                </span>

                <span class="type" n:if="$constant->typeHint">: {$constant->typeHint|typeLinks:$constant|noescape}</span>
            </code>

            <div n:class="description, detailed">
                {$constant->getDescription()}

                {foreach $template->annotationSort($template->annotationFilter($annotations, array('var'))) as $annotation => $descriptions}
                    <h4>{$annotation|annotationBeautify}</h4>
                    <div class="list">
                    {foreach $descriptions as $description}
                        {if $description}
                            {$description|annotation:$annotation:$constant|noescape}<br>
                        {/if}
                    {/foreach}
                    </div>
                {/foreach}
            </div>

            <pre class="value">{$constant->valueDefinition|highlightValue:$class|noescape}</pre>
        </div>
        </div>

        {foreach $inheritedConstants as $parentName => $constants}
        <h3>Constants inherited from <a href="{$parentName|linkReflection}#constants" n:tag-if="$template->getClass($parentName)">{$parentName}</a></h3>
        <p class="elementList">
        {foreach $constants as $constant}
            <code><a href="{$constant|constantUrl}" n:tag-if="$template->getClass($parentName)"><b><span n:tag-if="$constant->isDeprecated()" class"deprecated">{$constant->getName()}</span></b></a></code>{sep}, {/sep}
        {/foreach}
        </p>
        {/foreach}
    {/if}

    {var $ownProperties = $class->ownProperties}
    {var $inheritedProperties = $class->inheritedProperties}

    {if $ownProperties || $inheritedProperties}
        {define property}
        <div id="${$property->getName()}" n:class="element">
            <a href="#${$property->getName()}" class="anchor"></a>
            <code class="signature">
                <span class="modifier">
                {if $property->protected}protected{elseif $property->private}private{else}public{/if} {if $property->static}static{/if}
                </span>

                <span class="name">
                <a href="{$property|linkSource}"><var>${$property->getName()}</var></a>
                </span>

                {if $property->typeHint}: <span class="type">{$property->typeHint|typeLinks:$property|noescape}</span>{/if}
            </code>

            <div n:class="description, detailed">
                {$property->getDescription()}

                {foreach $template->annotationSort($template->annotationFilter($property->annotations, array('var'))) as $annotation => $descriptions}
                    <h4>{$annotation|annotationBeautify}</h4>
                    <div class="list">
                    {foreach $descriptions as $description}
                        {if $description}
                            {$description|annotation:$annotation:$property|noescape}<br>
                        {/if}
                    {/foreach}
                    </div>
                {/foreach}
            </div>

            <pre class="value">{$property->defaultValueDefinition|highlightValue:$class|noescape}</pre>
        </div>
        {/define}

        <h2>Properties summary</h2>
        <div class="summary properties" id="properties" n:if="$ownProperties">
        {foreach $ownProperties as $property}
            {include property, property => $property}
        {/foreach}
        </div>

        {foreach $inheritedProperties as $parentName => $properties}
        <h3>Properties inherited from <a href="{$parentName|linkReflection}#properties" n:tag-if="$template->getClass($parentName)">{$parentName}</a></h3>
        <p class="elementList">
        {foreach $properties as $property}
            <code><a href="{$property|propertyUrl}" n:tag-if="$template->getClass($parentName)"><var><span n:tag-if="$property->isDeprecated()" class="deprecated">${$property->getName()}</span></var></a></code>{sep}, {/sep}
        {/foreach}
        </p>
        {/foreach}

        <table n:foreach="$class->getTraits() as $traitName => $trait" class="summary used">
            <caption>Properties used from <a href="{$traitName|linkReflection}#properties">{$traitName}</a></caption>
            <tr>
                <td>
                    <code>
                        {foreach $trait->getOwnProperties() as $property}
                        <a href="{$property|propertyUrl: $trait}">
                            <var><span n:tag-if="$property->isDeprecated()" class="deprecated">${$property->getName()}</span></var>
                            </a>{sep}, {/sep}
                        {/foreach}
                    </code>
                </td>
            </tr>
        </table>
    {/if}
</div>
{/block}
