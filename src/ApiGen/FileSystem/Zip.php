<?php

/**
 * This file is part of the ApiGen (http://apigen.org)
 *
 * For the full copyright and license information, please view
 * the file license.md that was distributed with this source code.
 */

namespace ApiGen\FileSystem;

use ApiGen\Configuration\ConfigurationOptions as CO;
use Nette;
use Nette\Utils\Strings;
use RuntimeException;


/**
 * @method Zip setConfig(array $config)
 */
class Zip extends Nette\Object
{

	/**
	 * @var array
	 */
	private $config;

	/**
	 * @var Finder
	 */
	private $finder;


	public function __construct(Finder $finder)
	{
		$this->finder = $finder;
	}


	public function generate()
	{
		if ( ! extension_loaded('zip')) {
			throw new RuntimeException('Extension zip is not loaded');
		}

		$archive = new \ZipArchive;
		if ($archive->open($this->getArchivePath(), \ZipArchive::CREATE) !== TRUE) {
			throw new RuntimeException('Could not open ZIP archive');
		}

		$archive->setArchiveComment(trim(sprintf(
			'%s API documentation generated by ApiGen on %s',
			rtrim($this->config[CO::TITLE], ' API'), date('Y-m-d H:i:s')
		)));

		$directory = Strings::webalize(trim(sprintf('%s API documentation', $this->config[CO::TITLE])), NULL, FALSE);
		$destinationLength = strlen($this->config[CO::DESTINATION]);
		foreach ($this->finder->findGeneratedFiles() as $file) {
			if (is_file($file)) {
				$archive->addFile($file, $directory . '/' . substr($file, $destinationLength + 1));
			}
		}

		if ($archive->close() === FALSE) {
			throw new RuntimeException('Could not save ZIP archive');
		}
	}


	/**
	 * Returns ZIP archive path.
	 *
	 * @return string
	 */
	public function getArchivePath()
	{
		$name = trim($this->config[CO::TITLE] . ' API documentation');
		return $this->config[CO::DESTINATION] . '/' . Strings::webalize($name) . '.zip';
	}

}
